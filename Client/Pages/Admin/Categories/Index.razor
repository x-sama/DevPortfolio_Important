@page "/admin/categories"

<main class="admin-area-main">
    <SideBar></SideBar>
    <div class="admin-area-content container-fluid bg-white">
        <div class="row g-0">
            <div class="col">
                <h1>Categories</h1>
                <br />
                <hr />
                <br />

                @if (InMemoryDataCache.Categories == null )
                {
                    <LoadingDot />
                }
                else
                {
                    <a href="/admin/categories/create" class="btn btn-success shadow me-5 md-f-size-1-5">
								<i class="fas fa-plus"></i> Create category
							</a>

							<button @onclick="() => InMemoryDataCache.GetCategoriesFromDatabaseAndCache()" class="btn btn-primary shadow md-f-size-1-5">
								<i class="fas fa-sync"></i> Refresh data
							</button>

							<br />
							<br />
							<br />

							@if (InMemoryDataCache.Categories.Count < 1)
							{
								<h1>No categories found. Please create one.</h1>
							}
							else
							{
								<div class="table-responsive">
									<table class="table table-striped table-bordered table-sm">
										<thead>
											<tr>
												<th scope="col">Name</th>
												<th scope="col">Thumbnail</th>
												<th scope="col">Description</th>
												<th scope="col">Actions</th>
											</tr>
										</thead>
										<tbody>
											@foreach (var category in InMemoryDataCache.Categories)
											{
												<tr>
													<th class="w-15" scope="row">
														<p>@category.Name</p>
													</th>
													<td class="w-35">
														<img src="@($"{ApiEndPoints.ServerBaseUrl}/{category.ThumbnailImagePath}")" class="admin-index-thumbnail-image" alt="Category thumbnail image" />
													</td>
													<td class="w-15">
														<p>@category.Description</p>
													</td>
													<td class="w-35">
														<div class="d-flex flex-column">
															<a href="/admin/categories/update/@category.CategoryId" class="btn btn-update shadow md-f-size-1-5">
																<i class="fas fa-edit"></i> Update
															</a>

															<br />
															<button class="btn btn-danger shadow md-f-size-1-5">
																<i class="fas fa-trash"></i> Delete
															</button>
															
														</div>
													</td>
												</tr>
											}
										</tbody>
									</table>
								</div>
							}
						}

            </div>
        </div>
    </div>
</main>

@implements IDisposable

@code{
    [Inject] InMemoryDataCach InMemoryDataCache { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        InMemoryDataCache.OnCategoriesDataChanged += StateHasChanged;
        if (InMemoryDataCache.Categories == null)
        {
           await  InMemoryDataCache.GetCategoriesFromDatabaseAndCache();
        }
    }

    public void Dispose()
    {
        InMemoryDataCache.OnCategoriesDataChanged -= StateHasChanged;
    }

}